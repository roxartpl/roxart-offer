"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _freeSolidSvgIcons = require("@fortawesome/free-solid-svg-icons");

var _freeRegularSvgIcons = require("@fortawesome/free-regular-svg-icons");

var _styles = require("@buffetjs/styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var iconMap = new Map([['time', _freeRegularSvgIcons.faClock], ['password', _freeSolidSvgIcons.faEye], ['search', _freeSolidSvgIcons.faSearch], ['left', _freeSolidSvgIcons.faAngleLeft], ['right', _freeSolidSvgIcons.faAngleRight], ['asc', _freeSolidSvgIcons.faSortUp], ['desc', _freeSolidSvgIcons.faSortDown], ['trash', _freeSolidSvgIcons.faTrash], ['plus', _freeSolidSvgIcons.faPlus]]);

function Icon(_ref) {
  var icon = _ref.icon,
      className = _ref.className;

  if (iconMap.has(icon)) {
    return _react["default"].createElement(_styles.Icon, {
      icon: iconMap.get(icon),
      className: className || undefined
    });
  }

  if ((0, _react.isValidElement)(icon)) {
    return _react["default"].createElement("span", {
      className: className
    }, icon);
  }

  return null;
}

Icon.defaultProps = {
  className: null,
  icon: 'search'
};
Icon.propTypes = {
  className: _propTypes["default"].string,
  icon: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node])
};
var _default = Icon;
exports["default"] = _default;